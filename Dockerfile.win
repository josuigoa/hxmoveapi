FROM haxe:4.0.5-windowsservercore-1809

SHELL ["powershell", "-command"]

ENV HASHLINK_BIN C:\\hashlink
ENV HASHLINK C:\\hashlink\\include
ENV CL_EXE_PATH C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin

ENV MSVC_PATH C:\\Program Files (x86)\\MSBuild\\14.0\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319;C:\\Windows\\Microsoft.NET\\Framework\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\bin\\x86;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Users\\ContainerAdministrator\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;
ENV MSVC_INCLUDE C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE;C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.10240.0\\ucrt;C:\\Program Files (x86)\\Windows Kits\\8.1\\include\\shared;C:\\Program Files (x86)\\Windows Kits\\8.1\\include\\um;C:\\Program Files (x86)\\Windows Kits\\8.1\\include\\winrt;
ENV MSVC_LIB C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\LIB;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;C:\\Program Files (x86)\\Windows Kits\\8.1\\lib\\winv6.3\\um\\x86;
ENV MSVC_LIBPATH C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\LIB;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319;C:\\Windows\\Microsoft.NET\\Framework\\;References\\CommonConfiguration\\Neutral;\\Microsoft.VCLibs\\14.0\\References\\CommonConfiguration\\neutral;

# PATH isn't actually set in the Docker image, so we have to set it from within the container
RUN $newPath = ('{0};{1};{2};{3};{4}' -f $env:HASHLINK_BIN, $env:HASHLINK, $env:CL_EXE_PATH, $env:MSVC_PATH, $env:PATH); \
	Write-Host ('Updating PATH: {0}' -f $newPath); \
	[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine); \
	$newInclude = ('{0}' -f $env:MSVC_INCLUDE); \
	Write-Host ('Updating INCLUDE: {0}' -f $newInclude); \
	[Environment]::SetEnvironmentVariable('INCLUDE', $newInclude, [EnvironmentVariableTarget]::Machine); \
	$newLib = ('{0}' -f $env:MSVC_LIB); \
	Write-Host ('Updating LIB: {0}' -f $newLib); \
	[Environment]::SetEnvironmentVariable('LIB', $newLib, [EnvironmentVariableTarget]::Machine); \
	$newLibPath = ('{0}' -f $env:MSVC_LIBPATH); \
	Write-Host ('Updating LIBPATH: {0}' -f $newLibPath); \
	[Environment]::SetEnvironmentVariable('LIBPATH', $newLibPath, [EnvironmentVariableTarget]::Machine);
# doing this first to share cache across versions more aggressively

RUN Invoke-WebRequest https://chocolatey.org/install.ps1 -UseBasicParsing | Invoke-Expression
RUN choco install vcbuildtools git -y
RUN refreshenv

# install hashlink
ENV HL_VERSION 1.10
RUN $url = 'https://github.com/HaxeFoundation/hashlink/releases/download/1.10/hl-1.10.0-win.zip'; \
	Write-Host ('Downloading {0} ...' -f $url); \
	[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \
	Invoke-WebRequest -Uri $url -OutFile hashlink.zip; \
	\
	Write-Host 'Expanding ...'; \
	New-Item -ItemType directory -Path tmp; \
	Expand-Archive -Path hashlink.zip -DestinationPath tmp; \
	if (Test-Path tmp\hl.exe) { Move-Item tmp $env:HASHLINK_BIN } \
	else { Move-Item (Resolve-Path tmp\hl* | Select -ExpandProperty Path) $env:HASHLINK_BIN }; \
	\
	Write-Host 'Removing ...'; \
	Remove-Item -Path hashlink.zip, tmp -Force -Recurse -ErrorAction Ignore; \
	\
	Write-Host 'Verifying install ...'; \
	Write-Host '  hl'; hl; \
	Write-Host '  Downloading ammer'; haxelib git ammer https://github.com/Aurel300/ammer.git; \
	\
	Write-Host 'Complete.';

# install psmoveapi
ENV PSMOVEAPI_VERSION 4.0.8
ENV PSMOVEAPI_PATH C:\\psmoveapi_$PSMOVEAPI_VERSION
ENV PSMOVEAPI_INCLUDE $PSMOVEAPI_PATH\\include
ENV PSMOVEAPI_LIB $PSMOVEAPI_PATH\\lib

RUN $url = 'https://github.com/thp/psmoveapi/releases/download/4.0.8/psmoveapi-4.0.8-windows-msvc2017-x86.zip'; \
	Write-Host ('Downloading {0} ...' -f $url); \
	[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \
	Invoke-WebRequest -Uri $url -OutFile psmoveapi.zip; \
	\
	Write-Host 'Expanding ...'; \
	New-Item -ItemType directory -Path tmp; \
	Expand-Archive -Path psmoveapi.zip -DestinationPath tmp; \
	New-Item -ItemType directory -Path $env:PSMOVEAPI_PATH; \
	Move-Item tmp\psmoveapi*\* $env:PSMOVEAPI_PATH; \
	\
	Write-Host 'Removing ...'; \
	Remove-Item -Path psmoveapi.zip, tmp -Force -Recurse -ErrorAction Ignore; \
	\
	Write-Host 'Complete.';

CMD ["ping", "-t", "127.0.0.1"]